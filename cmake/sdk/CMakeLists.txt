###############################################################################
set(lhal_path "${SDK_PATH}/drivers/lhal")
set(std_path "${SDK_PATH}/drivers/soc/bl808/std")
set(bsp_path "${SDK_PATH}/bsp/board/bl808dk")
set(components_path "${SDK_PATH}/components")
###############################################################################
# blsdk_drivers
add_library(blsdk_drivers STATIC EXCLUDE_FROM_ALL)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_irq.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_common.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_adc.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_acomp.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_cks.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_ef_ctrl.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_gpio.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_i2c.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_dma.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_rtc.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_sec_aes.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_sec_sha.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_sec_trng.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_spi.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_timer.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_uart.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_wdg.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_flash.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/flash/bflb_sf_cfg.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/flash/bflb_xip_sflash.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/flash/bflb_sflash.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/flash/bflb_sf_ctrl.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_dac.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_emac.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_ir.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_mjpeg.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_pwm_v2.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_cam.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_csi.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_i2s.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_wo.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_irq.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_l1c.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/src/bflb_mtimer.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/include/arch/risc-v/t-head/rv_hart.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/include/arch/risc-v/t-head/rv_pmp.c)
target_sources(blsdk_drivers PRIVATE ${lhal_path}/config/bl808/device_table.c)
target_include_directories(blsdk_drivers PUBLIC ${lhal_path}/include)
target_include_directories(blsdk_drivers PUBLIC ${lhal_path}/include/hardware)
target_include_directories(blsdk_drivers PUBLIC ${lhal_path}/include/compiler)
target_include_directories(blsdk_drivers PUBLIC ${lhal_path}/include/arch)
target_include_directories(blsdk_drivers PUBLIC ${lhal_path}/include/arch/risc-v/t-head)
target_include_directories(blsdk_drivers PUBLIC ${lhal_path}/include/arch/risc-v/t-head/Core/Include)
target_include_directories(blsdk_drivers PUBLIC ${lhal_path}/include/arch/risc-v/t-head/csi_dsp/include)
target_include_directories(blsdk_drivers PUBLIC ${lhal_path}/config/bl808)
target_include_directories(blsdk_drivers PUBLIC ${lhal_path}/src/flash)
target_link_libraries(blsdk_drivers PRIVATE ${lhal_path}/include/arch/risc-v/t-head/csi_dsp/lib/libcsi_xt900p32f_dsp.a)
target_link_libraries(blsdk_drivers PRIVATE ${lhal_path}/src/pka/libpka.a)
target_sources(blsdk_drivers PRIVATE ${std_path}/startup/m0/start.S)
target_sources(blsdk_drivers PRIVATE ${std_path}/startup/m0/vector.S)
target_sources(blsdk_drivers PRIVATE ${std_path}/startup/m0/riscv_fpu.S)
target_sources(blsdk_drivers PRIVATE ${std_path}/startup/m0/start_load.c)
target_sources(blsdk_drivers PRIVATE ${std_path}/startup/m0/system_bl808.c)
target_sources(blsdk_drivers PRIVATE ${std_path}/startup/m0/interrupt.c)
target_sources(blsdk_drivers PRIVATE ${std_path}/src/bl808_aon.c)
target_sources(blsdk_drivers PRIVATE ${std_path}/src/bl808_clock.c)
target_sources(blsdk_drivers PRIVATE ${std_path}/src/bl808_common.c)
target_sources(blsdk_drivers PRIVATE ${std_path}/src/bl808_ef_cfg.c)
target_sources(blsdk_drivers PRIVATE ${std_path}/src/bl808_glb.c)
target_sources(blsdk_drivers PRIVATE ${std_path}/src/bl808_glb_gpio.c)
target_sources(blsdk_drivers PRIVATE ${std_path}/src/bl808_hbn.c)
target_sources(blsdk_drivers PRIVATE ${std_path}/src/bl808_l1c.c)
target_sources(blsdk_drivers PRIVATE ${std_path}/src/bl808_pds.c)
target_sources(blsdk_drivers PRIVATE ${std_path}/src/bl808_sdh.c)
target_sources(blsdk_drivers PRIVATE ${std_path}/src/bl808_tzc_sec.c)
target_sources(blsdk_drivers PRIVATE ${std_path}/src/bl808_psram_uhs.c)
target_sources(blsdk_drivers PRIVATE ${std_path}/src/bl808_uhs_phy.c)
target_sources(blsdk_drivers PRIVATE ${std_path}/src/bl808_ipc.c)
target_sources(blsdk_drivers PRIVATE ${std_path}/port/bl808_clock.c)
target_include_directories(blsdk_drivers PUBLIC ${std_path}/include)
target_include_directories(blsdk_drivers PUBLIC ${std_path}/include/hardware)
target_compile_definitions(blsdk_drivers PUBLIC CONFIG_IRQ_NUM=80)
###############################################################################
# Components
add_library(blsdk_components_mm STATIC EXCLUDE_FROM_ALL)
target_sources(blsdk_components_mm PRIVATE ${components_path}/mm/mem.c)
target_sources(blsdk_components_mm PRIVATE ${components_path}/mm/tlsf/tlsf.c )
target_sources(blsdk_components_mm PRIVATE ${components_path}/mm/tlsf/bflb_tlsf.c)
target_include_directories(blsdk_components_mm PUBLIC ${components_path}/mm)
target_include_directories(blsdk_components_mm PUBLIC ${components_path}/mm/tlsf)
target_link_libraries(blsdk_components_mm PUBLIC blsdk_drivers)
target_compile_definitions(blsdk_components_mm PUBLIC configSTACK_ALLOCATION_FROM_SEPARATE_HEAP=1)
###############################################################################
# FreeRTOS
add_library(blsdk_components_os STATIC EXCLUDE_FROM_ALL)
target_sources(blsdk_components_os PRIVATE ${components_path}/os/freertos/croutine.c)
target_sources(blsdk_components_os PRIVATE ${components_path}/os/freertos/event_groups.c)
target_sources(blsdk_components_os PRIVATE ${components_path}/os/freertos/list.c)
target_sources(blsdk_components_os PRIVATE ${components_path}/os/freertos/queue.c)
target_sources(blsdk_components_os PRIVATE ${components_path}/os/freertos/tasks.c)
target_sources(blsdk_components_os PRIVATE ${components_path}/os/freertos/timers.c)
target_sources(blsdk_components_os PRIVATE ${components_path}/os/freertos/timers.c)
target_sources(blsdk_components_os PRIVATE ${components_path}/os/freertos/freertos_port.c)
target_sources(blsdk_components_os PRIVATE ${components_path}/os/freertos/portable/MemMang/heap_3.c)
target_sources(blsdk_components_os PRIVATE ${components_path}/os/freertos/portable/GCC/RISC-V/portStatTrap.c)
target_sources(blsdk_components_os PRIVATE ${components_path}/os/freertos/portable/GCC/RISC-V/common/port.c)
target_sources(blsdk_components_os PRIVATE ${components_path}/os/freertos/portable/GCC/RISC-V/common/portASM.S)
target_include_directories(blsdk_components_os PUBLIC ${components_path}/os/freertos/include)
target_include_directories(blsdk_components_os PUBLIC ${components_path}/os/freertos/portable/GCC/RISC-V/common)
target_include_directories(blsdk_components_os PUBLIC ${components_path}/os/freertos/portable/GCC/RISC-V/common/chip_specific_extensions/RV32I_CLINT_no_extensions)
target_include_directories(blsdk_components_os PUBLIC ${PROJECT_SOURCE_DIR}) # FreeRTOSConfig.h
target_compile_definitions(blsdk_components_os PUBLIC CONFIG_FREERTOS)
target_compile_definitions(blsdk_components_os PUBLIC portasmHANDLE_INTERRUPT=interrupt_entry)
target_compile_definitions(blsdk_components_os PUBLIC default_interrupt_handler=freertos_risc_v_trap_handler)
target_link_libraries(blsdk_components_os PUBLIC blsdk_drivers)
###############################################################################
# Utils
add_library(blsdk_components_log STATIC EXCLUDE_FROM_ALL)
target_sources(blsdk_components_log PRIVATE ${components_path}/utils/log/log.c)
target_sources(blsdk_components_log PRIVATE ${components_path}/utils/log/log.c)
target_sources(blsdk_components_log PRIVATE ${components_path}/utils/log/bflog/bflog.c)
target_include_directories(blsdk_components_log PUBLIC ${components_path}/utils/log)
target_include_directories(blsdk_components_log PUBLIC ${components_path}/utils/log/bflog)
target_compile_definitions(blsdk_components_log PUBLIC CONFIG_LOG)
target_compile_definitions(blsdk_components_log PUBLIC CONFIG_LOG_LEVEL=3)
target_link_libraries(blsdk_components_log PUBLIC blsdk_drivers)
###############################################################################
# FatFS
add_library(blsdk_components_fatfs STATIC EXCLUDE_FROM_ALL)
target_sources(blsdk_components_fatfs PRIVATE ${components_path}/fs/fatfs/ff.c)
target_sources(blsdk_components_fatfs PRIVATE ${components_path}/fs/fatfs/diskio.c)
target_sources(blsdk_components_fatfs PRIVATE ${components_path}/fs/fatfs/ffsystem.c)
target_sources(blsdk_components_fatfs PRIVATE ${components_path}/fs/fatfs/ffunicode.c)
target_sources(blsdk_components_fatfs PRIVATE ${components_path}/fs/fatfs/diskio.c)
target_include_directories(blsdk_components_fatfs PUBLIC ${components_path}/fs/fatfs)
target_include_directories(blsdk_components_fatfs PUBLIC ${PROJECT_SOURCE_DIR}) # fatfs_conf_user.h
###############################################################################
# Timestamp
add_library(blsdk_components_timestamp STATIC EXCLUDE_FROM_ALL)
target_sources(blsdk_components_timestamp PRIVATE ${components_path}/utils/bflb_timestamp/bflb_timestamp.c)
target_include_directories(blsdk_components_timestamp PUBLIC ${components_path}/utils/bflb_timestamp)
###############################################################################
# Libc
add_library(blsdk_components_libc STATIC EXCLUDE_FROM_ALL)
target_sources(blsdk_components_libc PRIVATE ${components_path}/libc/snprintf.c)
target_sources(blsdk_components_libc PRIVATE ${components_path}/libc/sprintf.c)
target_sources(blsdk_components_libc PRIVATE ${components_path}/libc/vsprintf.c)
target_sources(blsdk_components_libc PRIVATE ${components_path}/libc/vsnprintf.c)
target_sources(blsdk_components_libc PRIVATE ${components_path}/libc/printf.c)
target_link_libraries(blsdk_components_libc PUBLIC blsdk_drivers)
target_link_libraries(blsdk_components_libc PUBLIC blsdk_components_mm)
target_link_libraries(blsdk_components_libc PUBLIC blsdk_components_fatfs)
target_compile_options(blsdk_components_libc PUBLIC -fno-builtin)
target_link_options(blsdk_components_libc PUBLIC -Wl,-wrap,snprintf)
target_link_options(blsdk_components_libc PUBLIC -Wl,-wrap,sprintf)
###############################################################################
add_library(blsdk_bsp_fw_header STATIC EXCLUDE_FROM_ALL)
target_sources(blsdk_bsp_fw_header PRIVATE ${bsp_path}/fw_header.c)
target_include_directories(blsdk_bsp_fw_header PUBLIC ${bsp_path})
target_link_options(blsdk_bsp_fw_header PUBLIC -ufw_header)
target_link_libraries(blsdk_bsp_fw_header PUBLIC blsdk_drivers)
target_link_libraries(blsdk_bsp_fw_header PUBLIC blsdk_components_libc)
# target_compile_definitions(blsdk_bsp PUBLIC CONFIG_PSRAM)
###############################################################################